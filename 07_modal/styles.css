:root {
  /* colors */
  --primary-100: #e0deff;
  --primary-200: #c1beff;
  --primary-300: #a29dff;
  --primary-400: #837dff;
  --primary-500: #645cff;
  --primary-600: #504acc;
  --primary-700: #3c3799;
  --primary-800: #282566;
  --primary-900: #141233;
  /* grey */
  --grey-50: #f8fafc;
  --grey-100: #f1f5f9;
  --grey-200: #e2e8f0;
  --grey-300: #cbd5e1;
  --grey-400: #94a3b8;
  --grey-500: #64748b;
  --grey-600: #475569;
  --grey-700: #334155;
  --grey-800: #1e293b;
  --grey-900: #0f172a;
  /* other colors */
  --black: #222;
  --white: #fff;
  --red-light: #f8d7da;
  --red-dark: #842029;
  --green-light: #d1e7dd;
  --green-dark: #0f5132;
  /* fonts */
  --headingFont: "Spectral", sans-serif;
  --bodyFont: "Karla", sans-serif;
  --smallText: 0.7em;
  /* all other vars */
  --backgroundColor: var(--grey-50);
  --textColor: var(--grey-900);
  --borderRadius: 0.25rem;
  --letterSpacing: 1px;
  --transition: 0.3s linear all;
  /*oppure scrivo così ->  --transition: all 0.3s linear; */
  --max-width: 1120px;
  --fixed-width: 600px;
  /* box shadows */
  --shadow-1: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  --shadow-2: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.6);
  --shadow-3: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --shadow-4: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
    0 10px 10px -5px rgba(0, 0, 0, 0.04);
}

body {
  background: var(--backgroundColor);
  font-family: var(--bodyFont);
  font-weight: 400;
  line-height: 1.75;
  color: var(--textColor);
}

p {
  margin-bottom: 1.5rem;
  max-width: 40em;
}

h1,
h2,
h3,
h4,
h5 {
  margin: 0;
  margin-bottom: 1.38rem;
  font-family: var(--headingFont);
  font-weight: 400;
  line-height: 1.3;
  text-transform: capitalize;
}

h1 {
  margin-top: 0;
  font-size: 3.052rem;
}

h2 {
  font-size: 2.441rem;
}

h3 {
  font-size: 1.953rem;
}

h4 {
  font-size: 1.563rem;
}

h5 {
  font-size: 1.25rem;
}

small,
.text-small {
  font-size: var(--smallText);
}

a {
  text-decoration: none;
}

ul {
  list-style-type: none;
  padding: 0;
}

.btn {
  cursor: pointer;
  color: var(--white);
  background: var(--primary-500);
  border: transparent;
  border-radius: var(--borderRadius);
  letter-spacing: var(--letterSpacing);
  padding: 0.375rem 0.75rem;
  box-shadow: var(--shadow-1);
  text-transform: capitalize;
  display: inline-block;
}

/* 
============
Modal
============
*/

.hero {
  min-height: 100vh;
  background: url(https://images.pexels.com/photos/257092/pexels-photo-257092.jpeg?auto=compress&cs=tinysrgb&w=1600)
    center/cover no-repeat;
  /* per piazzare il contenuto al centro */
  display: grid;
  place-items: center;
}

.banner {
  background: var(--white);
  padding: 4rem 0;
  border-radius: var(--borderRadius);
  box-shadow: var(--shadow-2);
  width: 90vw;
  text-align: center;
  /* su schermo grande non voglio che sia così grande, quindi gli assegno una max-width */
  max-width: var(--fixed-width);
}

/* MODAL */
/* ora lavoro con la sezione Modal overlay, ovvero quella che contiene il testo Modal Content e il btn X */
.modal-overlay {
  position: fixed;
  background: rgba(73, 166, 233, 0.5);
  /* per prendere TUTTO LO SCHERMO e coprire l'header posso scrivere o COSì */
  /* top: 0;
  left: 0;
  bottom: 0;
  right: 0; */
  /* OPPURE lascio top e left e scrivo COSì: */
  /* width: 100%;
  height: 100%; */
  /* OPPURE COSì come shorcut */
  inset: 0;
  /* questa copre tutte le possibilità sopra, che copre lato top, right, bottom, left -> non allarga come per il padding, ma comprime lo spazio disponibile per l'elemento */
  /* inset: 20px 40px 60px 100px; provo */
  /* devo piazzarli al centro, si andranno a sormontare all'header */
  display: grid;
  place-items: center;
  transition: var(--transition);
  /* devo nasconderlo di default: 1' modo per farlo -> visibility hidden e z-index per sicurezza */
  visibility: hidden;
  z-index: -10;
  /* display: none; */
}
/* adesso tutta la pagina prende un colore azzurrino, perchè modal overlay si sovrappone in width ed heigth all'header */

/* serve creare una classe che avrà una funzione, ovvero aprire il modal al click */
/* se ho usato sopra visibility e z-index, per riattivarli devo annullarli */
.open-modal {
  visibility: visible;
  z-index: 10;
  /* display: grid; */
}

.modal-container {
  background: var(--white);
  border-radius: var(--borderRadius);
  width: 90vw;
  height: 35vh;
  max-width: var(--fixed-width);
  display: grid;
  place-items: center;
  position: relative;
}

.close-btn {
  position: absolute;
  top: 1rem;
  right: 1rem;
  font-size: 2rem;
  background: transparent;
  border-color: transparent;
  color: var(--red-dark);
  cursor: pointer;
  transition: var(--transition);
}
/* il testo si è centrato e ora il btn sta in alto a dx */

.close-btn:hover {
  /* doppio effetto */
  transform: rotate(360deg) scale(1.3);
}

/* vado a mettere di default questo modal-overlay nascosto, hidden, quindi torno su a .modal-overlay */
